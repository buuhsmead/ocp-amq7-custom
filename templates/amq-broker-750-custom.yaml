apiVersion: v1
kind: Template
labels:
  template: amq-broker-750-custom
  xpaas: 1.4.16
  broker: ${AMQ_NAME}
message: A new messaging service has been created in your project. It will handle the protocol(s) "${AMQ_PROTOCOL}". The username/password for accessing the service is ${AMQ_USER}/${AMQ_PASSWORD}.
metadata:
  annotations:
    description: Application template for Red Hat AMQ brokers. This template doesn't feature SSL support.
    iconClass: icon-amq
    openshift.io/display-name: Red Hat AMQ Broker 7.5 Custom Config (Ephemeral, no SSL)
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: messaging,amq,xpaas
    template.openshift.io/documentation-url: 'https://access.redhat.com/documentation/en/red-hat-amq/'
    template.openshift.io/long-description: >-
      This template defines resources needed to develop a Red Hat AMQ Broker 7.5 based application, including a deployment configuration, using ephemeral (temporary) storage.
    template.openshift.io/support-url: 'https://access.redhat.com'        
    version: 1.4.16
  name: amq-broker-750-custom
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      description: Credentials used in broker config.
    name: ${AMQ_NAME}-amq-credential-secret
  type: Opaque
  stringData:
    username: ${AMQ_USER}
    password: ${AMQ_PASSWORD}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's Console and Jolokia port.
      service.alpha.openshift.io/serving-cert-secret-name: ${AMQ_NAME}-amq-console-certs
    name: ${AMQ_NAME}-amq-console
  spec:
    ports:
    - port: 8161
      targetPort: 8161
      name: console
    selector:
      deploymentConfig: ${AMQ_NAME}-amq
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's all tls protocols port.
      service.alpha.openshift.io/serving-cert-secret-name: ${AMQ_NAME}-amq-tcp-certs
    name: ${AMQ_NAME}-amq-ssl
  spec:
    ports:
    - port: 61617
      targetPort: 61617
      name: artemis-ssl
    selector:
      deploymentConfig: ${AMQ_NAME}-amq
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The broker's all tcp protocols port.
    name: ${AMQ_NAME}-amq-tcp
  spec:
    ports:
    - port: 61616
      targetPort: 61616
      name: artemis-tcp
    selector:
      deploymentConfig: ${AMQ_NAME}-amq
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${AMQ_NAME}-amq-pvol
  spec:
    accessModes:
      - "ReadWriteOnce"
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
    storageClassName: ${STORAGE_CLASS}       
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${AMQ_NAME}-amq
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${AMQ_NAME}-amq
    strategy:
      rollingParams:
        maxSurge: 0
      type: Rolling
      resources:
        limits:
          cpu: 600m
          memory: 512Mi
        requests:
          cpu: 200m
          memory: 128Mi
    template:
      metadata:
        labels:
          deploymentConfig: ${AMQ_NAME}-amq
          broker: ${AMQ_NAME}
        name: ${AMQ_NAME}-amq
      spec:
        containers:
        - env:
          - name: AMQ_USER
            valueFrom:
              secretKeyRef:
                name: ${AMQ_NAME}-amq-credential-secret
                key: username
          - name: AMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${AMQ_NAME}-amq-credential-secret
                key: password
          - name: AMQ_ROLE
            value: ${AMQ_ROLE}
          - name: AMQ_NAME
            value: ${AMQ_NAME}
          - name: AMQ_TRANSPORTS
            value: ${AMQ_PROTOCOL}
          - name: AMQ_QUEUES
            value: ${AMQ_QUEUES}
          - name: AMQ_ADDRESSES
            value: ${AMQ_ADDRESSES}
          - name: AMQ_GLOBAL_MAX_SIZE
            value: ${AMQ_GLOBAL_MAX_SIZE}
          - name: AMQ_REQUIRE_LOGIN
            value: ${AMQ_REQUIRE_LOGIN}
          - name: BROKER_XML
            value: ${BROKER_XML}
          - name: LOGGING_PROPERTIES
            value: ${LOGGING_PROPERTIES}
          - name: AMQ_EXTRA_ARGS
            value: ${AMQ_EXTRA_ARGS}
          - name: AMQ_ANYCAST_PREFIX
            value: ${AMQ_ANYCAST_PREFIX}
          - name: AMQ_MULTICAST_PREFIX
            value: ${AMQ_MULTICAST_PREFIX}
          - name: AMQ_JOURNAL_TYPE
            value: ${AMQ_JOURNAL_TYPE}
          - name: AMQ_KEYSTORE_PASSWORD
            value: ${AMQ_KEYSTORE_PASSWORD}
          - name: AMQ_DATA_DIR
            value: ${AMQ_DATA_DIR}  
          - name: JAVA_OPTS
            value: >-
               -javaagent:/opt/amq/lib/optional/jmx_prometheus_javaagent.jar=9779:/opt/amq/conf/prometheus-config.yml
               -Dcom.sun.management.jmxremote=true
               -Djava.rmi.server.hostname=127.0.0.1
               -Dcom.sun.management.jmxremote.port=1099
               -Dcom.sun.management.jmxremote.ssl=true
               -Dcom.sun.management.jmxremote.registry.ssl=true
               -Dcom.sun.management.jmxremote.ssl.need.client.auth=true
               -Dcom.sun.management.jmxremote.authenticate=false            
          image: ${IMAGE}
          imagePullPolicy: Always
          readinessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "/opt/amq/bin/readinessProbe.sh"
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 2                 
          name: ${AMQ_NAME}-amq
          resources:
            limits:
              cpu: ${LIMIT_CPU}
              memory: ${LIMIT_MEMORY}
            requests:
              cpu: ${REQUEST_CPU}
              memory: ${REQUEST_MEMORY}
          ports:
          - containerPort: 8161
            name: console
            protocol: TCP
          - containerPort: 61616
            name: artemis-tcp
            protocol: TCP
          - containerPort: 61617
            name: artemis-ssl
            protocol: TCP  
          - containerPort: 9779
            name: prometheues
            protocol: TCP            
          volumeMounts:
          - name: ${AMQ_NAME}-amq-data
            mountPath: ${AMQ_DATA_DIR}
          - mountPath: /home/jboss/broker-extra-config
            name: broker-extra-config
          - mountPath: /home/jboss/broker-keystore
            name: keystore-volume
          - mountPath: /home/jboss/broker-truststore
            name: truststore-config
          - mountPath: /home/jboss/broker-truststore-users-roles  
            name: truststore-users-roles-config                                     
        terminationGracePeriodSeconds: 60
        initContainers:
        - name: pem-to-keystore
          resources:
            limits:
              cpu: 900m
              memory: 768Mi
            requests:
              cpu: 100m
              memory: 256Mi
          image: 'nexus.vpbank.net:5015/redhat-sso-7/sso71-openshift:1.1-16'
          env:
          - name: console_keyfile
            value: /var/run/secrets/console_certs/tls.key
          - name: console_crtfile
            value: /var/run/secrets/console_certs/tls.crt
          - name: console_keystore_p12
            value: /var/run/secrets/java.io/keystores/console.p12
          - name: amq_keyfile
            value: /var/run/secrets/amq_tcp_certs/tls.key
          - name: amq_crtfile
            value: /var/run/secrets/amq_tcp_certs/tls.crt
          - name: amq_keystore_p12
            value: /var/run/secrets/java.io/keystores/artemis.p12
          - name: password
            value: ${AMQ_KEYSTORE_PASSWORD}
          command: ['/bin/bash']
          args: ['-c', "openssl pkcs12 -export -inkey $console_keyfile -in $console_crtfile -out $console_keystore_p12 -password pass:$password && openssl pkcs12 -export -inkey $amq_keyfile -in $amq_crtfile -out $amq_keystore_p12 -password pass:$password "]
          volumeMounts:
          - mountPath: /var/run/secrets/java.io/keystores
            name: keystore-volume
          - mountPath: /var/run/secrets/console_certs
            name: service-console-certs
          - mountPath: /var/run/secrets/amq_tcp_certs
            name: service-amq-tcp-certs        
        volumes:
          - name: ${AMQ_NAME}-amq-data
            persistentVolumeClaim:
              claimName: ${AMQ_NAME}-amq-pvol
          - configMap:
              defaultMode: 420
              name: broker-${AMQ_NAME}-config
            name: broker-extra-config
          - name: truststore-config
            secret:
              secretName: truststore-${AMQ_NAME}
              optional: true
          - name: truststore-users-roles-config
            secret:
              secretName: truststore-${AMQ_NAME}-users-roles 
              optional: true
          - name: keystore-volume
            emptyDir: {}
          - name: service-console-certs
            secret:
              secretName: ${AMQ_NAME}-amq-console-certs     
          - name: service-amq-tcp-certs
            secret:
              secretName: ${AMQ_NAME}-amq-tcp-certs                      
    triggers:
    - type: ConfigChange
parameters:
- description: The name of the broker. Must be SAME as BU
  displayName: AMQ Name
  name: AMQ_NAME
  value: broker
  required: true
- description: 'Protocols to configure, separated by commas. Allowed values are: `openwire`, `amqp`, `stomp`, `mqtt` and `hornetq`.'
  displayName: AMQ Protocols
  name: AMQ_PROTOCOL
  value: openwire,amqp,stomp,mqtt,hornetq
- description: Queue names, separated by commas. These queues will be automatically created when the broker starts. If left empty, queues will be still created dynamically.
  displayName: Queues
  name: AMQ_QUEUES
- description: Address names, separated by commas. These addresses will be automatically created when the broker starts. If left empty, addresses will be still created dynamically.
  displayName: Addresses
  name: AMQ_ADDRESSES
- description: User name for standard broker user. It is required for connecting to the broker. If left empty, it will be generated. It serves as a key by which the real user name is retrieved from kubernetes secret object.
  displayName: AMQ Username
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: AMQ_USER
- description: Password for standard broker user. It is required for connecting to the broker. If left empty, it will be generated. It serves as a key by which the real password is retrieved from kubernetes secret object.
  displayName: AMQ Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: AMQ_PASSWORD
- description: User role for standard broker user.
  displayName: AMQ Role
  name: AMQ_ROLE
  value: amq
- description: "Maximum amount of memory which message data may consume (Default: Undefined, half of the system's memory)."
  displayName: AMQ Global Max Size
  name: AMQ_GLOBAL_MAX_SIZE
  value: 100 gb
- description: "Determines whether or not the broker will allow anonymous access, or require login."
  displayName: AMQ Require Login
  name: AMQ_REQUIRE_LOGIN
  value: "true"
- description: Extra arguments for broker creation
  name: AMQ_EXTRA_ARGS
  required: false
- description: Anycast prefix applied to the multiplexed protocol port 61616
  displayName: AMQ Anycast Prefix
  name: AMQ_ANYCAST_PREFIX
  required: false
- description: Multicast prefix applied to the multiplexed protocol port 61616
  displayName: AMQ Multicast Prefix
  name: AMQ_MULTICAST_PREFIX
  required: false
- description: Broker Image
  displayName: Image
  name: IMAGE
  required: true
  value: 'nexus.vpbank.net:5017/fuse-01-mgmt/amq7-custom:7.5.15-1'
- description: Journal type to use; aio or nio supported
  displayName: AMQ Journal Type
  name: AMQ_JOURNAL_TYPE
  value: nio
  required: false
- description: The Limit of CPU
  displayName: Limit CPU
  name: LIMIT_CPU
  value: 2000m
- description: The Request of CPU
  displayName: Request CPU
  name: REQUEST_CPU
  value: 1000m
- description: The Limit of Memory
  displayName: Limit Memory
  name: LIMIT_MEMORY
  value: 4096Mi
- description: The Request of Memory
  displayName: Request Memory
  name: REQUEST_MEMORY
  value: 1024Mi
- description: Name of the storage class to be used, one off (glusterfs-dev,glusterfs-mgmt,glusterfs-stage,glusterfs-prod) 
  displayName: Storage class
  name: STORAGE_CLASS
  value: "glusterfs-dev"
  required: true
- description: Size of the volume used by AMQ for persisting messages.
  displayName: AMQ Volume Size
  name: VOLUME_CAPACITY
  value: 5Gi
  required: true
- description: Keystore Password
  displayName: Keystore password in use for service certifactes
  name: AMQ_KEYSTORE_PASSWORD
  from: '[a-zA-Z0-9]{8}'
  generate: expression
- description: The directory to use for data storage
  displayName: AMQ Data Directory
  name: AMQ_DATA_DIR
  value: /opt/amq/data
- description: The broker.xml configuration file.
  displayName: broker.xml
  name: BROKER_XML
  value: |- 
    <?xml version='1.0'?>
    <configuration xmlns="urn:activemq"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xmlns:xi="http://www.w3.org/2001/XInclude"
                   xsi:schemaLocation="urn:activemq /schema/artemis-configuration.xsd">

       <core xmlns="urn:activemq:core" 
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:xi="http://www.w3.org/2001/XInclude"
             xsi:schemaLocation="urn:activemq:core ">

          <name>${AMQ_NAME}</name>

          <persistence-enabled>true</persistence-enabled>
          <journal-type>NIO</journal-type>
          <paging-directory>${AMQ_DATA_DIR}/paging</paging-directory>
          <bindings-directory>${AMQ_DATA_DIR}/bindings</bindings-directory>
          <journal-directory>${AMQ_DATA_DIR}/journal</journal-directory>
          <large-messages-directory>${AMQ_DATA_DIR}/large-messages</large-messages-directory>
          <journal-datasync>true</journal-datasync>
          <journal-min-files>2</journal-min-files>
          <journal-pool-files>10</journal-pool-files>
          <journal-file-size>10M</journal-file-size>
          
          <journal-buffer-timeout>6016000</journal-buffer-timeout>

          <!--
            When using ASYNCIO, this will determine the writing queue depth for libaio.
           -->
          <journal-max-io>1</journal-max-io>

          <!-- how often we are looking for how many bytes are being used on the disk in ms -->
          <disk-scan-period>5000</disk-scan-period>

          <!-- once the disk hits this limit the system will block, or close the connection in certain protocols
               that won't support flow control. -->
          <max-disk-usage>90</max-disk-usage>

          <!-- should the broker detect dead locks and other issues -->
          <critical-analyzer>true</critical-analyzer>
          <critical-analyzer-timeout>120000</critical-analyzer-timeout>
          <critical-analyzer-check-period>60000</critical-analyzer-check-period>
          <critical-analyzer-policy>HALT</critical-analyzer-policy>

          <!-- the system will enter into page mode once you hit this limit.
               This is an estimate in bytes of how much the messages are using in memory

                The system will use half of the available memory (-Xmx) by default for the global-max-size.
                You may specify a different value here if you need to customize it to your needs.

                <global-max-size>${AMQ_STORAGE_USAGE_LIMIT}</global-max-size>

          -->

          <acceptors>
             <!-- useEpoll means: it will use Netty epoll if you are on a system (Linux) that supports it -->
             <!-- amqpCredits: The number of credits sent to AMQP producers -->
             <!-- amqpLowCredits: The server will send the # credits specified at amqpCredits at this low mark -->

             <!-- Acceptor for every supported protocol 0.0.0.0 into ${BROKER_IP} -->

             <acceptor name="artemis-ssl">tcp://0.0.0.0:61617?tcpSendBufferSize=1048576;tcpReceiveBufferSize=1048576;protocols=CORE,AMQP,OPENWIRE;useEpoll=true;amqpCredits=1000;amqpLowCredits=300;sslEnabled=true;keyStorePath=/home/jboss/broker-keystore/artemis.p12;keyStorePassword=${AMQ_KEYSTORE_PASSWORD};trustStorePath=/home/jboss/broker-truststore/truststore;trustStorePassword=changeit;wantClientAuth=true;needClientAuth=false;connectionsAllowed=200;</acceptor>
            <!-- acceptor name="artemis-ssl">tcp://0.0.0.0:61617?tcpSendBufferSize=1048576;tcpReceiveBufferSize=1048576;protocols=CORE,AMQP,OPENWIRE;useEpoll=true;amqpCredits=1000;amqpLowCredits=300;sslEnabled=true;keyStorePath=/home/jboss/broker-keystore/artemis.p12;keyStorePassword=${AMQ_KEYSTORE_PASSWORD};connectionsAllowed=200;</acceptor -->
             
             <acceptor name="artemis-tcp">tcp://0.0.0.0:61616?tcpSendBufferSize=1048576;tcpReceiveBufferSize=1048576;protocols=CORE,AMQP,OPENWIRE;useEpoll=true;amqpCredits=1000;amqpLowCredits=300;connectionsAllowed=200;</acceptor>
          </acceptors>

          <security-settings>
             <security-setting match="#">
                <permission type="createNonDurableQueue" roles="${AMQ_ROLE}"/>
                <permission type="deleteNonDurableQueue" roles="${AMQ_ROLE}"/>
                <permission type="createDurableQueue" roles="${AMQ_ROLE}"/>
                <permission type="deleteDurableQueue" roles="${AMQ_ROLE}"/>
                <permission type="createAddress" roles="${AMQ_ROLE}"/>
                <permission type="deleteAddress" roles="${AMQ_ROLE}"/>
                <permission type="consume" roles="${AMQ_ROLE}"/>
                <permission type="browse" roles="${AMQ_ROLE}"/>
                <permission type="send" roles="${AMQ_ROLE}"/>
                <!-- we need this otherwise ./artemis data imp wouldn't work -->
                <permission type="manage" roles="${AMQ_ROLE}"/>
             </security-setting>
          </security-settings>

          <address-settings>
             <!-- if you define auto-create on certain queues, management has to be auto-create -->
             <address-setting match="activemq.management#">
                <dead-letter-address>DLQ</dead-letter-address>
                <expiry-address>ExpiryQueue</expiry-address>
                <redelivery-delay>0</redelivery-delay>
                <!-- with -1 only the global-max-size is in use for limiting -->
                <max-size-bytes>-1</max-size-bytes>
                <message-counter-history-day-limit>10</message-counter-history-day-limit>
                <address-full-policy>PAGE</address-full-policy>
                <auto-create-queues>true</auto-create-queues>
                <auto-create-addresses>true</auto-create-addresses>
                <auto-create-jms-queues>true</auto-create-jms-queues>
                <auto-create-jms-topics>true</auto-create-jms-topics>
             </address-setting>
             <!--default for catch all-->
             <address-setting match="#">
                <dead-letter-address>DLQ</dead-letter-address>
                <expiry-address>ExpiryQueue</expiry-address>
                <redelivery-delay>0</redelivery-delay>
                <!-- with -1 only the global-max-size is in use for limiting -->
                <max-size-bytes>-1</max-size-bytes>
                <message-counter-history-day-limit>10</message-counter-history-day-limit>
                <address-full-policy>PAGE</address-full-policy>
                <auto-create-queues>true</auto-create-queues>
                <auto-create-addresses>true</auto-create-addresses>
                <auto-delete-addresses>false</auto-delete-addresses>
             </address-setting>
          </address-settings>

          <addresses>
             <address name="DLQ">
                <anycast>
                   <queue name="DLQ" />
                </anycast>
             </address>
             <address name="ExpiryQueue">
                <anycast>
                   <queue name="ExpiryQueue" />
                </anycast>
             </address>

          </addresses>

       </core>
    </configuration>
- description: The logging.properties configuration file.
  displayName: logging.properties
  name: LOGGING_PROPERTIES
  value: |- 
    #
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements. See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License. You may obtain a copy of the License at
    #
    #     http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #

    # Additional logger names to configure (root logger is always configured)
    # Root logger option
    loggers=org.apache.activemq.artemis.spi.core.security.jaas,io.prometheus.jmx,org.eclipse.jetty,org.jboss.logging,org.apache.activemq.artemis.core.server,org.apache.activemq.artemis.utils,org.apache.activemq.artemis.journal,org.apache.activemq.artemis.jms.server,org.apache.activemq.artemis.integration.bootstrap,org.apache.activemq.audit.base

    # Root logger level
    logger.level=INFO
    # ActiveMQ Artemis logger levels
    logger.org.apache.activemq.artemis.core.server.level=INFO
    logger.org.apache.activemq.artemis.journal.level=INFO
    logger.org.apache.activemq.artemis.utils.level=INFO
    logger.org.apache.activemq.artemis.jms.level=INFO
    logger.org.apache.activemq.artemis.integration.bootstrap.level=INFO
    logger.org.eclipse.jetty.level=WARN
    logger.org.apache.activemq.audit.base.level=WARN
    logger.io.prometheus.jmx.level=DEBUG
    logger.org.apache.activemq.artemis.spi.core.security.jaas.level=TRACE

    
    # Root logger handlers (do not configure other handlers)
    logger.handlers=CONSOLE

    # Console handler configuration
    handler.CONSOLE=org.jboss.logmanager.handlers.ConsoleHandler
    handler.CONSOLE.properties=autoFlush
    handler.CONSOLE.level=DEBUG
    handler.CONSOLE.autoFlush=true
    handler.CONSOLE.formatter=PATTERN

    # Formatter pattern configuration
    formatter.PATTERN=org.jboss.logmanager.formatters.PatternFormatter
    formatter.PATTERN.properties=pattern
    formatter.PATTERN.pattern=%d %-5p [%c] %s%E%n
    